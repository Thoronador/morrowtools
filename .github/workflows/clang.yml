name: Clang

on: push

jobs:
  ubuntu_clang:
    strategy:
      fail-fast: false
      matrix:
        version: [11, 12, 13]
    runs-on: ubuntu-22.04
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v3
      - name: Install Debian packages
        run: |
          sudo apt-get update
          sudo apt-get install -y catch2 cmake clang-${{ matrix.version }} liblz4-dev pkg-config zlib1g-dev
      - name: Install LLVM C++ Standard Library
        run: |
          sudo apt-get install -y libc++-${{ matrix.version }}-dev
        if: matrix.version == 8
      - name: Syntax check
        run: |
          export CXX=clang++-${{ matrix.version }}
          ./ci/cpplint.sh
        if: matrix.version == 11
      - name: Build with Clang ${{ matrix.version }}
        run: |
          export CXX=clang++-${{ matrix.version }}
          export CC=clang-${{ matrix.version }}
          cd $GITHUB_WORKSPACE
          mkdir build
          cd build
          cmake ../
          make -j2
      - name: Tests
        run: |
          cd "$GITHUB_WORKSPACE"/build
          ctest -V
      - name: Build without LZ4 support on Clang ${{ matrix.version }}
        run: |
          export CXX=clang++-${{ matrix.version }}
          export CC=clang-${{ matrix.version }}
          cd $GITHUB_WORKSPACE
          mkdir build-no-lz4
          cd build-no-lz4
          cmake ../ -DAUTODETECT_LZ4=OFF -DDISABLE_LZ4=ON
          make -j2
        if: matrix.version == 12
      - name: Test build without LZ4 support
        run: |
          cd "$GITHUB_WORKSPACE"/build-no-lz4
          ctest -V
        if: matrix.version == 12

  clang_lto_static:
    runs-on: ubuntu-22.04
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v3
      - name: Install Debian packages
        run: |
          sudo apt-get update
          sudo apt-get install -y catch2 cmake clang-14 liblz4-dev pkg-config zlib1g-dev
      - name: Build with Clang 14
        run: |
          export CXX=clang++-14
          export CC=clang-14
          cd $GITHUB_WORKSPACE
          mkdir build
          cd build
          cmake -DENABLE_LTO=ON -DENABLE_STATIC_LINKING=ON ../
          make -j2
      - name: Tests
        run: |
          cd "$GITHUB_WORKSPACE"/build
          ctest -V
