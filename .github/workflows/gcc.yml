name: GCC

on: push

jobs:
  ubuntu_gcc:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        version: [8, 9, 10]
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v3
      - name: Install Debian packages
        run: |
          sudo apt-get update
          sudo apt-get install -y catch cmake g++-${{ matrix.version }} liblz4-dev pkg-config zlib1g-dev
      - name: Syntax check
        run: |
          export CXX=g++-${{ matrix.version }}
          ./ci/cpplint.sh
        if: matrix.version == 10
      - name: Build with GNU GCC ${{ matrix.version }}
        run: |
          export CXX=g++-${{ matrix.version }}
          export CC=gcc-${{ matrix.version }}
          cd $GITHUB_WORKSPACE
          mkdir build
          cd build
          cmake ../
          make -j2
      - name: Tests
        run: |
          cd "$GITHUB_WORKSPACE"/build
          ctest -V
  gcc10_lto_static:
    runs-on: ubuntu-20.04
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v3
      - name: Install Debian packages
        run: |
          sudo apt-get update
          sudo apt-get install -y catch cmake g++-10 liblz4-dev pkg-config zlib1g-dev
      - name: Build with GNU GCC 10
        run: |
          export CXX=g++-10
          export CC=gcc-10
          cd $GITHUB_WORKSPACE
          mkdir build
          cd build
          cmake -DENABLE_LTO=ON -DENABLE_STATIC_LINKING=ON ../
          make -j2
      - name: Tests
        run: |
          cd "$GITHUB_WORKSPACE"/build
          ctest -V
